name: Code Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.12']  # Specify Python versions to test
        os: [ubuntu-latest]
        include:
          # Add Windows and macOS testing for the latest Python version
          - python-version: '3.12'
            os: windows-latest
          - python-version: '3.12'
            os: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper coverage reporting

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'  # Cache pip dependencies

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-xdist
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      shell: bash

    - name: Run pytest
      run: |
        pytest --cov=./scr --cov-report=xml --cov-report=term -v


    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()  # Run even if tests fail
      with:
        name: pytest-results-${{ matrix.python-version }}-${{ matrix.os }}
        path: |
          coverage.xml
        retention-days: 30

  test-endpoint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest requests

      - name: Run app in background
        run: |
          uvicorn main:app --host 0.0.0.0 --port 8000 &
          sleep 3  # wait for server to start

      - name: Test /version endpoint
        run: pytest testing/test_version.py
