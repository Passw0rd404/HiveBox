# Default values for HiveBox.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
app:
  repository: passw0rd010/hivebox
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"
  env:
    MINIO_ENDPOINT: "minio.storage.svc.cluster.local:9000"
    MINIO_SECURE: "false"
    VALKEY_HOST: "valkey.cache.svc.cluster.local"
    VALKEY_PORT: "6379"
    VALKEY_PASSWORD: ""  # Empty since auth is disabled
    VALKEY_DB: "0"

monitoring-namespace: monitoring
namespace: my-app
storage-namespace: storage
# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  seccompProfile:
    type: RuntimeDefault
  runAsUser: 1001
  runAsGroup: 1001
  runAsNonRoot: true

securityContext:
  allowPrivilegeEscalation: false
  privileged: false

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8000
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "8000"

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: "alb"
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
  
  hosts:
    - host: "*"  # Accept any hostname - AWS will give you an ALB DNS name
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: "{{ include \"HiveBox.fullname\" . }}"
              port:
                number: 8000
  
  tls: []

resources:
  limits:
    cpu: "500m"
    memory: "100Mi"
  requests:
    memory: "100Mi"
    cpu: "250m"

secrets:
  minio:
    secretName: "minio-credentials"
    accessKeyKey: "accessKey"
    secretKeyKey: "secretKey"

minio:
  enabled: true
  mode: standalone
  image:
    repository: minio/minio
    tag: latest
  replicas: 1
  accessKey: "minioadmin"
  secretKey: "minioadmin"
  persistence:
    enabled: true
    size: 10Gi
  service:
    type: ClusterIP
    port: 9000
    consolePort: 9001

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
#livenessProbe:
#  httpGet:
#    path: /
#    port: http

readinessProbe:
      httpGet:
        path: /readyz
        port: 8000
      initialDelaySeconds: 10
      periodSeconds: 5
      timeoutSeconds: 3
      successThreshold: 1
      failureThreshold: 3
# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 3
  targetCPUUtilizationPercentage: 50
  targetMemoryUtilizationPercentage: 30

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

